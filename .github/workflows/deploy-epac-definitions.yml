name: deploy-epac-definitions

on:
  push:
    branches: [ main, master ]
    paths:
      - "Definitions/policyDefinitions/**/*.json"
      - ".github/workflows/deploy-epac-definitions.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: List policy files (debug)
        run: |
          ls -la Definitions/policyDefinitions || true
          find Definitions/policyDefinitions -type f -name '*.json' -print || true

      - name: Validate & publish policy definitions (subscription scope)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $api = '2021-06-01'
          $sub = '${{ secrets.AZURE_SUBSCRIPTION_ID }}'

          $files = Get-ChildItem -Path 'Definitions/policyDefinitions' -Recurse -Filter '*.json'
          if (-not $files) { throw 'No JSONs found under Definitions/policyDefinitions'; }

          foreach ($f in $files) {
            $jsonText = Get-Content -Raw -Path $f.FullName
            # Valida JSON
            $json = $jsonText | ConvertFrom-Json

            # Determina el name (del JSON o del nombre de archivo)
            $name = if ($json.name -and $json.name.Trim()) { $json.name.Trim() } else { [IO.Path]::GetFileNameWithoutExtension($f.Name) }
            if (-not $name) { throw "Policy name could not be determined for file $($f.FullName)"; }

            # Construye URL con ?api-version= (IMPORTANTE: signo de interrogación)
            $uri = "https://management.azure.com/subscriptions/$sub/providers/Microsoft.Authorization/policyDefinitions/$name?api-version=$api"
            Write-Host "PUT $uri (file=$($f.Name))"

            az rest --method put --url $uri --headers "Content-Type=application/json" --body "@$($f.FullName)"
          }

      - name: Verify definitions published
        shell: pwsh
        run: |
          $names = foreach ($f in Get-ChildItem 'Definitions/policyDefinitions' -Recurse -Filter '*.json') {
            $json = (Get-Content -Raw $f.FullName | ConvertFrom-Json)
            if ($json.name -and $json.name.Trim()) { $json.name.Trim() } else { [IO.Path]::GetFileNameWithoutExtension($f.Name) }
          } | Sort-Object -Unique
          foreach ($n in $names) {
            $dn = az policy definition show --name $n --query "properties.displayName" -o tsv 2>$null
            Write-Host "Published: $n → $dn"
          }
